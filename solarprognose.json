[
    {
        "id": "27c7285378b4bf0f",
        "type": "tab",
        "label": "PV Prognose SOC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e8a4a24b8b95b87d",
        "type": "debug",
        "z": "27c7285378b4bf0f",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 640,
        "wires": []
    },
    {
        "id": "dc0c18ca3255cdf0",
        "type": "inject",
        "z": "27c7285378b4bf0f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "13ce0246894e64c9"
            ]
        ]
    },
    {
        "id": "8cbeb0993f3dfbaf",
        "type": "victron-output-settings",
        "z": "27c7285378b4bf0f",
        "service": "com.victronenergy.settings",
        "path": "/Settings/CGwacs/BatteryLife/MinimumSocLimit",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings",
            "paths": [
                {
                    "path": "/Settings/CGwacs/AcPowerSetPoint",
                    "type": "float",
                    "name": "ESS control loop setpoint (W)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/BatteryLife/MinimumSocLimit",
                    "type": "float",
                    "name": "ESS Minimum SoC (unless grid fails) (%)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/BatteryLife/State",
                    "type": "enum",
                    "name": "ESS BatteryLife state",
                    "enum": {
                        "0": "Unused, BL disabled",
                        "1": "Restarting",
                        "2": "Self-consumption",
                        "3": "Self-consumption",
                        "4": "Self-consumption",
                        "5": "Discharge disabled",
                        "6": "Force charge",
                        "7": "Sustain",
                        "8": "Low Soc Recharge",
                        "9": "Keep batteries charged",
                        "10": "BL Disabled",
                        "11": "BL Disabled (Low SoC)",
                        "12": "BL Disabled (Low SOC recharge)"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/SystemSetup/MaxChargeCurrent",
                    "type": "float",
                    "name": "DVCC system max charge current (A DC)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/Hub4Mode",
                    "type": "enum",
                    "name": "ESS Mode",
                    "enum": {
                        "1": "ESS with Phase Compensation",
                        "2": "ESS without phase compensation",
                        "3": "Disabled/External Control"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/MaxChargePercentage",
                    "type": "float",
                    "name": "ESS max charge current (fractional) (%)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/MaxDischargePercentage",
                    "type": "float",
                    "name": "ESS max discharge current (fractional) (%)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/MaxDischargePower",
                    "type": "float",
                    "name": "ESS max discharge current (W)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/MaxFeedInPower",
                    "type": "float",
                    "name": "Maximum System Grid Feed In (W)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/OvervoltageFeedIn",
                    "type": "enum",
                    "name": "Feed excess DC-coupled PV into grid",
                    "enum": {
                        "0": "Don’t feed excess DC-tied PV into grid",
                        "1": "Feed excess DC-tied PV into the grid"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/PreventFeedback",
                    "type": "enum",
                    "name": "AC-coupled PV - grid feed in excess",
                    "enum": {
                        "0": "Feed excess AC-tied PV into grid",
                        "1": "Don’t feed excess AC-tied PV into the grid"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/SystemSetup/MaxChargeVoltage",
                    "type": "float",
                    "name": "Limit managed battery voltage (V DC)",
                    "writable": true
                }
            ]
        },
        "pathObj": {
            "path": "/Settings/CGwacs/BatteryLife/MinimumSocLimit",
            "type": "float",
            "name": "ESS Minimum SoC (unless grid fails) (%)",
            "writable": true
        },
        "name": "",
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "68a12d3f300b34e5",
        "type": "sunrise",
        "z": "27c7285378b4bf0f",
        "name": "",
        "lat": "48.23943",
        "lon": "9.93417",
        "start": "goldenHourEnd",
        "end": "goldenHour",
        "soff": "0",
        "eoff": "0",
        "x": 150,
        "y": 120,
        "wires": [
            [],
            [
                "c5051da42fcc79d6"
            ]
        ]
    },
    {
        "id": "c5051da42fcc79d6",
        "type": "switch",
        "z": "27c7285378b4bf0f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 120,
        "wires": [
            [
                "db8c8875ae01ee0e"
            ],
            [
                "13ce0246894e64c9"
            ]
        ]
    },
    {
        "id": "db8c8875ae01ee0e",
        "type": "function",
        "z": "27c7285378b4bf0f",
        "name": "Sunrise",
        "func": "flow.set('sunrise',Date.now());\nflow.set('energy_sunrise',flow.get('energy_now'));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 60,
        "wires": [
            [
                "ee40bf622c068eab"
            ]
        ]
    },
    {
        "id": "338f84b5c65f2f99",
        "type": "function",
        "z": "27c7285378b4bf0f",
        "name": "Sunset",
        "func": "// capa capacity of battery\ncapa = 7.104;\n\n// minimum system soc\nsyssoc = 5;\n\n// get time of sunset\nflow.set('sunset',Date.now());\n\n// daylength = length of current day in hours\nflow.set('daylength',(flow.get('sunset')-flow.get('sunrise')) / 3600000);\n\n// get energy counter sunset\nflow.set('energy_sunset',flow.get('energy_now'));\n\n// set energy consumption during solar production\nvar jetzt = new Date(), tag = jetzt.getDay();\n\n\nflow.set('energy_day'+tag, (flow.get('energy_day'+tag)+(flow.get('energy_sunset')-flow.get('energy_sunrise')))/2);\nnextday = tag+1;\n\nif (nextday==7) nextday=0;\n\nladung = (flow.get('pv_tomorrow')-flow.get('energy_day'+nextday));\n\nminsoc = (1-((ladung*1.1) / capa))*100;\n\n        \n\nif (minsoc<=syssoc) {\n    msg.payload = syssoc;\n} else if (minsoc>=flow.get('soc')){\n    msg.payload = Math.round(flow.get('soc')/5)*5;\n} else {\n    msg.payload = Math.round(minsoc/5)*5;\n}\nflow.set('minsoc',msg.payload);\nflow.set('ladung',ladung);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Der Code hier wird ausgeführt,\n// wenn der Node gestartet wird\n\n/*flow.set('energy_day0',12);\nflow.set('energy_day1',8);\nflow.set('energy_day2',8);\nflow.set('energy_day3',8);\nflow.set('energy_day4',8);\nflow.set('energy_day5',8);\nflow.set('energy_day6',12);\n*/",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 340,
        "wires": [
            [
                "8cbeb0993f3dfbaf"
            ]
        ]
    },
    {
        "id": "c42f763f1da8d4b9",
        "type": "inject",
        "z": "27c7285378b4bf0f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 440,
        "y": 380,
        "wires": [
            [
                "d821e62a5e88eecd"
            ]
        ]
    },
    {
        "id": "d821e62a5e88eecd",
        "type": "function",
        "z": "27c7285378b4bf0f",
        "name": "Set SOC 10",
        "func": "msg.payload = 10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 380,
        "wires": [
            [
                "8cbeb0993f3dfbaf"
            ]
        ]
    },
    {
        "id": "4bbec67404066a5f",
        "type": "debug",
        "z": "27c7285378b4bf0f",
        "name": "Allout",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 140,
        "wires": []
    },
    {
        "id": "b7c66d7faffdcdfb",
        "type": "inject",
        "z": "27c7285378b4bf0f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 40,
        "wires": [
            [
                "d0970be7e60ead3b"
            ]
        ]
    },
    {
        "id": "d0970be7e60ead3b",
        "type": "function",
        "z": "27c7285378b4bf0f",
        "name": "All Flow Out",
        "func": "/*flow.set('energy_day0',12);\nflow.set('energy_day1',6);\nflow.set('energy_day2',6);\nflow.set('energy_day3',6);\nflow.set('energy_day4',6);\nflow.set('energy_day5',6);\nflow.set('energy_day6',12);\nflow.set('energy_now',0);*/\n\n\nmsg.sunset = flow.get('sunset');\nmsg.sunrise = flow.get('sunrise');\nmsg.daylength = flow.get('daylength');\nmsg.energy_sunset = flow.get('energy_sunset');\nmsg.energy_sunrise = flow.get('energy_sunrise');\nmsg.energy_now = flow.get('energy_now');\nmsg.energy_day = flow.get('energy_day');\nmsg.minsoc = flow.get('minsoc');\nmsg.chargelimit=flow.get('chargelimit');\nmsg.ladung = flow.get('ladung');\nmsg.pv_today = flow.get('pv_today');\nmsg.pv_tomorrow = flow.get('pv_tomorrow');\nmsg.soc = flow.get('soc');\nmsg.energy_day0 = flow.get('energy_day0');\nmsg.energy_day1 = flow.get('energy_day1');\nmsg.energy_day2 = flow.get('energy_day2');\nmsg.energy_day3 = flow.get('energy_day3');\nmsg.energy_day4 = flow.get('energy_day4');\nmsg.energy_day5 = flow.get('energy_day5');\nmsg.energy_day6 = flow.get('energy_day6');\nmsg.energytillnow = msg.energy_now-msg.energy_sunrise;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Der Code hier wird ausgeführt,\n// wenn der Node gestartet wird\n//flow.set('energy_now',0);",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 140,
        "wires": [
            [
                "4bbec67404066a5f"
            ]
        ]
    },
    {
        "id": "9d6e178a91b5f346",
        "type": "victron-input-system",
        "z": "27c7285378b4bf0f",
        "service": "com.victronenergy.system",
        "path": "/Ac/Consumption/L1/Power",
        "serviceObj": {
            "service": "com.victronenergy.system",
            "name": "com.victronenergy.system",
            "paths": [
                {
                    "path": "/Ac/ActiveIn/Source",
                    "type": "enum",
                    "name": "AC-Input",
                    "enum": {
                        "0": "Not available",
                        "1": "Grid",
                        "2": "Generator",
                        "3": "Shore",
                        "240": "Inverting"
                    }
                },
                {
                    "path": "/Ac/Consumption/L1/Power",
                    "type": "float",
                    "name": "AC Consumption L1 (W)"
                },
                {
                    "path": "/Ac/Consumption/L2/Power",
                    "type": "float",
                    "name": "AC Consumption L2 (W)"
                },
                {
                    "path": "/Ac/Consumption/L3/Power",
                    "type": "float",
                    "name": "AC Consumption L3 (W)"
                },
                {
                    "path": "/Ac/Genset/DeviceType",
                    "type": "float",
                    "name": "Genset Device Type",
                    "enum": {}
                },
                {
                    "path": "/Ac/Genset/L1/Power",
                    "type": "float",
                    "name": "Genset L1 (W)"
                },
                {
                    "path": "/Ac/Genset/L2/Power",
                    "type": "float",
                    "name": "Genset L2 (W)"
                },
                {
                    "path": "/Ac/Genset/L3/Power",
                    "type": "float",
                    "name": "Genset L3 (W)"
                },
                {
                    "path": "/Ac/Genset/NumberOfPhases",
                    "type": "integer",
                    "name": "Genset Number Of Phases"
                },
                {
                    "path": "/Ac/Grid/DeviceType",
                    "type": "float",
                    "name": "Grid Device Type"
                },
                {
                    "path": "/Ac/Grid/L1/Power",
                    "type": "float",
                    "name": "Grid L1 (W)"
                },
                {
                    "path": "/Ac/Grid/L2/Power",
                    "type": "float",
                    "name": "Grid L2 (W)"
                },
                {
                    "path": "/Ac/Grid/L3/Power",
                    "type": "float",
                    "name": "Grid L3 (W)"
                },
                {
                    "path": "/Ac/Grid/NumberOfPhases",
                    "type": "integer",
                    "name": "Grid Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGenset/L1/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L1"
                },
                {
                    "path": "/Ac/PvOnGenset/L2/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L2"
                },
                {
                    "path": "/Ac/PvOnGenset/L3/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L3"
                },
                {
                    "path": "/Ac/PvOnGenset/NumberOfPhases",
                    "type": "integer",
                    "name": "PV Power AC-tied on Generator Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGrid/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L1 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L2 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L3 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on input Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnOutput/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L1 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L2 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L3 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on output Number Of Phases"
                },
                {
                    "path": "/Dc/Battery/ConsumedAmphours",
                    "type": "float",
                    "name": "Battery Consumed Amphours (Ah)"
                },
                {
                    "path": "/Dc/Battery/Current",
                    "type": "float",
                    "name": "Battery current (A)"
                },
                {
                    "path": "/Dc/Battery/Power",
                    "type": "float",
                    "name": "Battery Power (W)"
                },
                {
                    "path": "/Dc/Battery/Soc",
                    "type": "float",
                    "name": "Battery State of Charge (%)"
                },
                {
                    "path": "/Dc/Battery/State",
                    "type": "enum",
                    "name": "Battery state",
                    "enum": {
                        "0": "idle",
                        "1": "charging",
                        "2": "discharging"
                    }
                },
                {
                    "path": "/Dc/Battery/Temperature",
                    "type": "float",
                    "name": "Battery temperature (C)"
                },
                {
                    "path": "/Dc/Battery/TimeToGo",
                    "type": "float",
                    "name": "Battery Time to Go (h)"
                },
                {
                    "path": "/Dc/Battery/Voltage",
                    "type": "float",
                    "name": "Battery voltage (V)"
                },
                {
                    "path": "/Dc/Charger/Power",
                    "type": "integer",
                    "name": "AC-Chargers - power (W)"
                },
                {
                    "path": "/Dc/Pv/Current",
                    "type": "float",
                    "name": "MPPTs - current (A)"
                },
                {
                    "path": "/Dc/Pv/Power",
                    "type": "float",
                    "name": "MPPTs - power (W)"
                },
                {
                    "path": "/Dc/System/Power",
                    "type": "float",
                    "name": "DC System (W)"
                },
                {
                    "path": "/Dc/Vebus/Current",
                    "type": "float",
                    "name": "VE.Bus charge current (A)"
                },
                {
                    "path": "/Dc/Vebus/Power",
                    "type": "float",
                    "name": "VE.Bus charge power (W)"
                },
                {
                    "path": "/Serial",
                    "type": "string",
                    "name": "Serial (System)"
                },
                {
                    "path": "/SystemType",
                    "type": "string",
                    "name": "System type"
                },
                {
                    "path": "/Timers/TimeOff",
                    "type": "float",
                    "name": "Time off (s)"
                },
                {
                    "path": "/Timers/TimeOnGenerator",
                    "type": "float",
                    "name": "Time generator (s)"
                },
                {
                    "path": "/Timers/TimeOnGrid",
                    "type": "float",
                    "name": "Time grid (s)"
                },
                {
                    "path": "/Timers/TimeOnInverter",
                    "type": "float",
                    "name": "Time inverting (s)"
                }
            ]
        },
        "pathObj": {
            "path": "/Ac/Consumption/L1/Power",
            "type": "float",
            "name": "AC Consumption L1 (W)"
        },
        "initial": "",
        "name": "",
        "x": 210,
        "y": 720,
        "wires": [
            [
                "1c413b43a23e0df8"
            ]
        ]
    },
    {
        "id": "85bf29d73420a88f",
        "type": "victron-input-system",
        "z": "27c7285378b4bf0f",
        "service": "com.victronenergy.system",
        "path": "/Ac/Consumption/L2/Power",
        "serviceObj": {
            "service": "com.victronenergy.system",
            "name": "com.victronenergy.system",
            "paths": [
                {
                    "path": "/Ac/ActiveIn/Source",
                    "type": "enum",
                    "name": "AC-Input",
                    "enum": {
                        "0": "Not available",
                        "1": "Grid",
                        "2": "Generator",
                        "3": "Shore",
                        "240": "Inverting"
                    }
                },
                {
                    "path": "/Ac/Consumption/L1/Power",
                    "type": "float",
                    "name": "AC Consumption L1 (W)"
                },
                {
                    "path": "/Ac/Consumption/L2/Power",
                    "type": "float",
                    "name": "AC Consumption L2 (W)"
                },
                {
                    "path": "/Ac/Consumption/L3/Power",
                    "type": "float",
                    "name": "AC Consumption L3 (W)"
                },
                {
                    "path": "/Ac/Genset/DeviceType",
                    "type": "float",
                    "name": "Genset Device Type",
                    "enum": {}
                },
                {
                    "path": "/Ac/Genset/L1/Power",
                    "type": "float",
                    "name": "Genset L1 (W)"
                },
                {
                    "path": "/Ac/Genset/L2/Power",
                    "type": "float",
                    "name": "Genset L2 (W)"
                },
                {
                    "path": "/Ac/Genset/L3/Power",
                    "type": "float",
                    "name": "Genset L3 (W)"
                },
                {
                    "path": "/Ac/Genset/NumberOfPhases",
                    "type": "integer",
                    "name": "Genset Number Of Phases"
                },
                {
                    "path": "/Ac/Grid/DeviceType",
                    "type": "float",
                    "name": "Grid Device Type"
                },
                {
                    "path": "/Ac/Grid/L1/Power",
                    "type": "float",
                    "name": "Grid L1 (W)"
                },
                {
                    "path": "/Ac/Grid/L2/Power",
                    "type": "float",
                    "name": "Grid L2 (W)"
                },
                {
                    "path": "/Ac/Grid/L3/Power",
                    "type": "float",
                    "name": "Grid L3 (W)"
                },
                {
                    "path": "/Ac/Grid/NumberOfPhases",
                    "type": "integer",
                    "name": "Grid Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGenset/L1/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L1"
                },
                {
                    "path": "/Ac/PvOnGenset/L2/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L2"
                },
                {
                    "path": "/Ac/PvOnGenset/L3/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L3"
                },
                {
                    "path": "/Ac/PvOnGenset/NumberOfPhases",
                    "type": "integer",
                    "name": "PV Power AC-tied on Generator Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGrid/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L1 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L2 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L3 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on input Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnOutput/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L1 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L2 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L3 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on output Number Of Phases"
                },
                {
                    "path": "/Dc/Battery/ConsumedAmphours",
                    "type": "float",
                    "name": "Battery Consumed Amphours (Ah)"
                },
                {
                    "path": "/Dc/Battery/Current",
                    "type": "float",
                    "name": "Battery current (A)"
                },
                {
                    "path": "/Dc/Battery/Power",
                    "type": "float",
                    "name": "Battery Power (W)"
                },
                {
                    "path": "/Dc/Battery/Soc",
                    "type": "float",
                    "name": "Battery State of Charge (%)"
                },
                {
                    "path": "/Dc/Battery/State",
                    "type": "enum",
                    "name": "Battery state",
                    "enum": {
                        "0": "idle",
                        "1": "charging",
                        "2": "discharging"
                    }
                },
                {
                    "path": "/Dc/Battery/Temperature",
                    "type": "float",
                    "name": "Battery temperature (C)"
                },
                {
                    "path": "/Dc/Battery/TimeToGo",
                    "type": "float",
                    "name": "Battery Time to Go (h)"
                },
                {
                    "path": "/Dc/Battery/Voltage",
                    "type": "float",
                    "name": "Battery voltage (V)"
                },
                {
                    "path": "/Dc/Charger/Power",
                    "type": "integer",
                    "name": "AC-Chargers - power (W)"
                },
                {
                    "path": "/Dc/Pv/Current",
                    "type": "float",
                    "name": "MPPTs - current (A)"
                },
                {
                    "path": "/Dc/Pv/Power",
                    "type": "float",
                    "name": "MPPTs - power (W)"
                },
                {
                    "path": "/Dc/System/Power",
                    "type": "float",
                    "name": "DC System (W)"
                },
                {
                    "path": "/Dc/Vebus/Current",
                    "type": "float",
                    "name": "VE.Bus charge current (A)"
                },
                {
                    "path": "/Dc/Vebus/Power",
                    "type": "float",
                    "name": "VE.Bus charge power (W)"
                },
                {
                    "path": "/Serial",
                    "type": "string",
                    "name": "Serial (System)"
                },
                {
                    "path": "/SystemType",
                    "type": "string",
                    "name": "System type"
                },
                {
                    "path": "/Timers/TimeOff",
                    "type": "float",
                    "name": "Time off (s)"
                },
                {
                    "path": "/Timers/TimeOnGenerator",
                    "type": "float",
                    "name": "Time generator (s)"
                },
                {
                    "path": "/Timers/TimeOnGrid",
                    "type": "float",
                    "name": "Time grid (s)"
                },
                {
                    "path": "/Timers/TimeOnInverter",
                    "type": "float",
                    "name": "Time inverting (s)"
                }
            ]
        },
        "pathObj": {
            "path": "/Ac/Consumption/L2/Power",
            "type": "float",
            "name": "AC Consumption L2 (W)"
        },
        "initial": "",
        "name": "",
        "x": 210,
        "y": 780,
        "wires": [
            [
                "effc5640be4cb264"
            ]
        ]
    },
    {
        "id": "250feaebce576fa6",
        "type": "victron-input-system",
        "z": "27c7285378b4bf0f",
        "service": "com.victronenergy.system",
        "path": "/Ac/Consumption/L3/Power",
        "serviceObj": {
            "service": "com.victronenergy.system",
            "name": "com.victronenergy.system",
            "paths": [
                {
                    "path": "/Ac/ActiveIn/Source",
                    "type": "enum",
                    "name": "AC-Input",
                    "enum": {
                        "0": "Not available",
                        "1": "Grid",
                        "2": "Generator",
                        "3": "Shore",
                        "240": "Inverting"
                    }
                },
                {
                    "path": "/Ac/Consumption/L1/Power",
                    "type": "float",
                    "name": "AC Consumption L1 (W)"
                },
                {
                    "path": "/Ac/Consumption/L2/Power",
                    "type": "float",
                    "name": "AC Consumption L2 (W)"
                },
                {
                    "path": "/Ac/Consumption/L3/Power",
                    "type": "float",
                    "name": "AC Consumption L3 (W)"
                },
                {
                    "path": "/Ac/Genset/DeviceType",
                    "type": "float",
                    "name": "Genset Device Type",
                    "enum": {}
                },
                {
                    "path": "/Ac/Genset/L1/Power",
                    "type": "float",
                    "name": "Genset L1 (W)"
                },
                {
                    "path": "/Ac/Genset/L2/Power",
                    "type": "float",
                    "name": "Genset L2 (W)"
                },
                {
                    "path": "/Ac/Genset/L3/Power",
                    "type": "float",
                    "name": "Genset L3 (W)"
                },
                {
                    "path": "/Ac/Genset/NumberOfPhases",
                    "type": "integer",
                    "name": "Genset Number Of Phases"
                },
                {
                    "path": "/Ac/Grid/DeviceType",
                    "type": "float",
                    "name": "Grid Device Type"
                },
                {
                    "path": "/Ac/Grid/L1/Power",
                    "type": "float",
                    "name": "Grid L1 (W)"
                },
                {
                    "path": "/Ac/Grid/L2/Power",
                    "type": "float",
                    "name": "Grid L2 (W)"
                },
                {
                    "path": "/Ac/Grid/L3/Power",
                    "type": "float",
                    "name": "Grid L3 (W)"
                },
                {
                    "path": "/Ac/Grid/NumberOfPhases",
                    "type": "integer",
                    "name": "Grid Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGenset/L1/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L1"
                },
                {
                    "path": "/Ac/PvOnGenset/L2/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L2"
                },
                {
                    "path": "/Ac/PvOnGenset/L3/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L3"
                },
                {
                    "path": "/Ac/PvOnGenset/NumberOfPhases",
                    "type": "integer",
                    "name": "PV Power AC-tied on Generator Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGrid/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L1 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L2 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L3 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on input Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnOutput/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L1 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L2 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L3 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on output Number Of Phases"
                },
                {
                    "path": "/Dc/Battery/ConsumedAmphours",
                    "type": "float",
                    "name": "Battery Consumed Amphours (Ah)"
                },
                {
                    "path": "/Dc/Battery/Current",
                    "type": "float",
                    "name": "Battery current (A)"
                },
                {
                    "path": "/Dc/Battery/Power",
                    "type": "float",
                    "name": "Battery Power (W)"
                },
                {
                    "path": "/Dc/Battery/Soc",
                    "type": "float",
                    "name": "Battery State of Charge (%)"
                },
                {
                    "path": "/Dc/Battery/State",
                    "type": "enum",
                    "name": "Battery state",
                    "enum": {
                        "0": "idle",
                        "1": "charging",
                        "2": "discharging"
                    }
                },
                {
                    "path": "/Dc/Battery/Temperature",
                    "type": "float",
                    "name": "Battery temperature (C)"
                },
                {
                    "path": "/Dc/Battery/TimeToGo",
                    "type": "float",
                    "name": "Battery Time to Go (h)"
                },
                {
                    "path": "/Dc/Battery/Voltage",
                    "type": "float",
                    "name": "Battery voltage (V)"
                },
                {
                    "path": "/Dc/Charger/Power",
                    "type": "integer",
                    "name": "AC-Chargers - power (W)"
                },
                {
                    "path": "/Dc/Pv/Current",
                    "type": "float",
                    "name": "MPPTs - current (A)"
                },
                {
                    "path": "/Dc/Pv/Power",
                    "type": "float",
                    "name": "MPPTs - power (W)"
                },
                {
                    "path": "/Dc/System/Power",
                    "type": "float",
                    "name": "DC System (W)"
                },
                {
                    "path": "/Dc/Vebus/Current",
                    "type": "float",
                    "name": "VE.Bus charge current (A)"
                },
                {
                    "path": "/Dc/Vebus/Power",
                    "type": "float",
                    "name": "VE.Bus charge power (W)"
                },
                {
                    "path": "/Serial",
                    "type": "string",
                    "name": "Serial (System)"
                },
                {
                    "path": "/SystemType",
                    "type": "string",
                    "name": "System type"
                },
                {
                    "path": "/Timers/TimeOff",
                    "type": "float",
                    "name": "Time off (s)"
                },
                {
                    "path": "/Timers/TimeOnGenerator",
                    "type": "float",
                    "name": "Time generator (s)"
                },
                {
                    "path": "/Timers/TimeOnGrid",
                    "type": "float",
                    "name": "Time grid (s)"
                },
                {
                    "path": "/Timers/TimeOnInverter",
                    "type": "float",
                    "name": "Time inverting (s)"
                }
            ]
        },
        "pathObj": {
            "path": "/Ac/Consumption/L3/Power",
            "type": "float",
            "name": "AC Consumption L3 (W)"
        },
        "initial": "",
        "name": "",
        "x": 210,
        "y": 840,
        "wires": [
            [
                "9f0746f1ea4de6d6"
            ]
        ]
    },
    {
        "id": "1c413b43a23e0df8",
        "type": "function",
        "z": "27c7285378b4bf0f",
        "name": "function 9",
        "func": "cl1 = msg.payload* 5 * 1/3600 /1000;\nflow.set('energy_now',flow.get('energy_now')+cl1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Der Code hier wird ausgeführt,\n// wenn der Node gestartet wird\nflow.set('cl1',0);",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 720,
        "wires": [
            [
                "93b33dad6e854141"
            ]
        ]
    },
    {
        "id": "effc5640be4cb264",
        "type": "function",
        "z": "27c7285378b4bf0f",
        "name": "function 10",
        "func": "cl2 = msg.payload* 5 * 1/3600 /1000;\nflow.set('energy_now',flow.get('energy_now')+cl2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Der Code hier wird ausgeführt,\n// wenn der Node gestartet wird\nflow.set('cl2',0);",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 780,
        "wires": [
            [
                "e650868814506a5c"
            ]
        ]
    },
    {
        "id": "9f0746f1ea4de6d6",
        "type": "function",
        "z": "27c7285378b4bf0f",
        "name": "function 11",
        "func": "cl3 = msg.payload* 5 * 1/3600/1000;\nflow.set('energy_now',flow.get('energy_now')+cl3);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Der Code hier wird ausgeführt,\n// wenn der Node gestartet wird\nflow.set('cl3',0);",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 840,
        "wires": [
            [
                "2e6d385c3c72e7bf"
            ]
        ]
    },
    {
        "id": "93b33dad6e854141",
        "type": "debug",
        "z": "27c7285378b4bf0f",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 720,
        "wires": []
    },
    {
        "id": "e650868814506a5c",
        "type": "debug",
        "z": "27c7285378b4bf0f",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 780,
        "wires": []
    },
    {
        "id": "2e6d385c3c72e7bf",
        "type": "debug",
        "z": "27c7285378b4bf0f",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 840,
        "wires": []
    },
    {
        "id": "c849cd2ce9b892c0",
        "type": "victron-input-system",
        "z": "27c7285378b4bf0f",
        "service": "com.victronenergy.system",
        "path": "/Dc/Battery/Soc",
        "serviceObj": {
            "service": "com.victronenergy.system",
            "name": "com.victronenergy.system",
            "paths": [
                {
                    "path": "/Ac/ActiveIn/Source",
                    "type": "enum",
                    "name": "AC-Input",
                    "enum": {
                        "0": "Not available",
                        "1": "Grid",
                        "2": "Generator",
                        "3": "Shore",
                        "240": "Inverting"
                    }
                },
                {
                    "path": "/Ac/Consumption/L1/Power",
                    "type": "float",
                    "name": "AC Consumption L1 (W)"
                },
                {
                    "path": "/Ac/Consumption/L2/Power",
                    "type": "float",
                    "name": "AC Consumption L2 (W)"
                },
                {
                    "path": "/Ac/Consumption/L3/Power",
                    "type": "float",
                    "name": "AC Consumption L3 (W)"
                },
                {
                    "path": "/Ac/Genset/DeviceType",
                    "type": "float",
                    "name": "Genset Device Type",
                    "enum": {}
                },
                {
                    "path": "/Ac/Genset/L1/Power",
                    "type": "float",
                    "name": "Genset L1 (W)"
                },
                {
                    "path": "/Ac/Genset/L2/Power",
                    "type": "float",
                    "name": "Genset L2 (W)"
                },
                {
                    "path": "/Ac/Genset/L3/Power",
                    "type": "float",
                    "name": "Genset L3 (W)"
                },
                {
                    "path": "/Ac/Genset/NumberOfPhases",
                    "type": "integer",
                    "name": "Genset Number Of Phases"
                },
                {
                    "path": "/Ac/Grid/DeviceType",
                    "type": "float",
                    "name": "Grid Device Type"
                },
                {
                    "path": "/Ac/Grid/L1/Power",
                    "type": "float",
                    "name": "Grid L1 (W)"
                },
                {
                    "path": "/Ac/Grid/L2/Power",
                    "type": "float",
                    "name": "Grid L2 (W)"
                },
                {
                    "path": "/Ac/Grid/L3/Power",
                    "type": "float",
                    "name": "Grid L3 (W)"
                },
                {
                    "path": "/Ac/Grid/NumberOfPhases",
                    "type": "integer",
                    "name": "Grid Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGenset/L1/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L1"
                },
                {
                    "path": "/Ac/PvOnGenset/L2/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L2"
                },
                {
                    "path": "/Ac/PvOnGenset/L3/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L3"
                },
                {
                    "path": "/Ac/PvOnGenset/NumberOfPhases",
                    "type": "integer",
                    "name": "PV Power AC-tied on Generator Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGrid/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L1 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L2 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L3 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on input Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnOutput/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L1 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L2 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L3 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on output Number Of Phases"
                },
                {
                    "path": "/Dc/Battery/ConsumedAmphours",
                    "type": "float",
                    "name": "Battery Consumed Amphours (Ah)"
                },
                {
                    "path": "/Dc/Battery/Current",
                    "type": "float",
                    "name": "Battery current (A)"
                },
                {
                    "path": "/Dc/Battery/Power",
                    "type": "float",
                    "name": "Battery Power (W)"
                },
                {
                    "path": "/Dc/Battery/Soc",
                    "type": "float",
                    "name": "Battery State of Charge (%)"
                },
                {
                    "path": "/Dc/Battery/State",
                    "type": "enum",
                    "name": "Battery state",
                    "enum": {
                        "0": "idle",
                        "1": "charging",
                        "2": "discharging"
                    }
                },
                {
                    "path": "/Dc/Battery/Temperature",
                    "type": "float",
                    "name": "Battery temperature (C)"
                },
                {
                    "path": "/Dc/Battery/TimeToGo",
                    "type": "float",
                    "name": "Battery Time to Go (h)"
                },
                {
                    "path": "/Dc/Battery/Voltage",
                    "type": "float",
                    "name": "Battery voltage (V)"
                },
                {
                    "path": "/Dc/Charger/Power",
                    "type": "integer",
                    "name": "AC-Chargers - power (W)"
                },
                {
                    "path": "/Dc/Pv/Current",
                    "type": "float",
                    "name": "MPPTs - current (A)"
                },
                {
                    "path": "/Dc/Pv/Power",
                    "type": "float",
                    "name": "MPPTs - power (W)"
                },
                {
                    "path": "/Dc/System/Power",
                    "type": "float",
                    "name": "DC System (W)"
                },
                {
                    "path": "/Dc/Vebus/Current",
                    "type": "float",
                    "name": "VE.Bus charge current (A)"
                },
                {
                    "path": "/Dc/Vebus/Power",
                    "type": "float",
                    "name": "VE.Bus charge power (W)"
                },
                {
                    "path": "/Serial",
                    "type": "string",
                    "name": "Serial (System)"
                },
                {
                    "path": "/SystemType",
                    "type": "string",
                    "name": "System type"
                },
                {
                    "path": "/Timers/TimeOff",
                    "type": "float",
                    "name": "Time off (s)"
                },
                {
                    "path": "/Timers/TimeOnGenerator",
                    "type": "float",
                    "name": "Time generator (s)"
                },
                {
                    "path": "/Timers/TimeOnGrid",
                    "type": "float",
                    "name": "Time grid (s)"
                },
                {
                    "path": "/Timers/TimeOnInverter",
                    "type": "float",
                    "name": "Time inverting (s)"
                }
            ]
        },
        "pathObj": {
            "path": "/Dc/Battery/Soc",
            "type": "float",
            "name": "Battery State of Charge (%)"
        },
        "initial": "",
        "name": "",
        "x": 220,
        "y": 920,
        "wires": [
            [
                "0a489410f51d3a79"
            ]
        ]
    },
    {
        "id": "0a489410f51d3a79",
        "type": "function",
        "z": "27c7285378b4bf0f",
        "name": "function 12",
        "func": "flow.set('soc',msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "52a591d15aff9307",
        "type": "victron-output-ess",
        "z": "27c7285378b4bf0f",
        "service": "com.victronenergy.settings",
        "path": "/Settings/SystemSetup/MaxChargeCurrent",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "ESS System Settings",
            "paths": [
                {
                    "path": "/Settings/CGwacs/AcPowerSetPoint",
                    "type": "integer",
                    "name": "Grid set-point (W)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/BatteryLife/MinimumSocLimit",
                    "type": "integer",
                    "name": "Minimum Discharge SOC (%)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/BatteryLife/State",
                    "type": "enum",
                    "name": "ESS state",
                    "enum": {
                        "1": "BatteryLife enabled (GUI controlled)",
                        "2": "Optimized Mode /w BatteryLife: self consumption",
                        "3": "Optimized Mode /w BatteryLife: self consumption, SoC exceeds 85%",
                        "4": "Optimized Mode /w BatteryLife: self consumption, SoC at 100%",
                        "5": "Optimized Mode /w BatteryLife: SoC below dynamic SoC limit",
                        "6": "Optimized Mode /w BatteryLife: SoC has been below SoC limit for more than 24 hours. Charging the battery (5A)",
                        "7": "Optimized Mode /w BatteryLife: Inverter/Charger is in sustain mode",
                        "8": "Optimized Mode /w BatteryLife: recharging, SoC dropped by 5% or more below the minimum SoC",
                        "9": "'Keep batteries charged' mode is enabled",
                        "10": "Optimized mode w/o BatteryLife: self consumption, SoC at or above minimum SoC",
                        "11": "Optimized mode w/o BatteryLife: self consumption, SoC is below minimum SoC",
                        "12": "Optimized mode w/o BatteryLife: recharging, SoC dropped by 5% or more below minimum SoC"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/Hub4Mode",
                    "type": "enum",
                    "name": "ESS mode",
                    "enum": {
                        "1": "Optimized mode or 'keep batteries charged' and phase compensation enabled",
                        "2": "Optimized mode or 'keep batteries charged' and phase compensation disabled",
                        "3": "External control"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/MaxDischargePower",
                    "type": "integer",
                    "name": "Max inverter power (W)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/MaxFeedInPower",
                    "type": "integer",
                    "name": "Maximum System Grid Feed In (W)",
                    "remarks": "<ul><li>-1: No limit</li><li> &gt;=0: limited system feed-in</li></ul><p>Applies to DC-coupled and AC-coupled feed-in.</p>",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/OvervoltageFeedIn",
                    "type": "enum",
                    "name": "Feed excess DC-coupled PV into grid",
                    "enum": {
                        "0": "Don’t feed excess DC-tied PV into grid",
                        "1": "Feed excess DC-tied PV into the grid"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/PreventFeedback",
                    "type": "enum",
                    "name": "Don’t feed excess AC-coupled PV into grid",
                    "enum": {
                        "0": "Feed excess AC-tied PV into grid",
                        "1": "Don’t feed excess AC-tied PV into the grid"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/SystemSetup/MaxChargeCurrent",
                    "type": "float",
                    "name": "Charge current limit (A)",
                    "writable": true
                }
            ]
        },
        "pathObj": {
            "path": "/Settings/SystemSetup/MaxChargeCurrent",
            "type": "float",
            "name": "Charge current limit (A)",
            "writable": true
        },
        "initial": "",
        "name": "",
        "x": 900,
        "y": 440,
        "wires": []
    },
    {
        "id": "d47b995640a0f8f7",
        "type": "function",
        "z": "27c7285378b4bf0f",
        "name": "Parse Req",
        "func": "flow.set(\"pv_tomorrow\",msg.payload.rad_sum*65*0.12)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 220,
        "wires": [
            [
                "338f84b5c65f2f99"
            ]
        ]
    },
    {
        "id": "74681be6ebf98544",
        "type": "http request",
        "z": "27c7285378b4bf0f",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "body",
        "url": "https://calc.donnerwetter.de/cgi-bin/globalrad/get_globalrad.py?{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Content-Type",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 610,
        "y": 220,
        "wires": [
            [
                "d47b995640a0f8f7"
            ]
        ]
    },
    {
        "id": "13ce0246894e64c9",
        "type": "function",
        "z": "27c7285378b4bf0f",
        "name": "Query Tomorrow",
        "func": "today = Math.round(Date.now()/1000);\ntomorrow = today + 86400;\n\nmsg.query =\"zip_code=88483&date=\"+tomorrow;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 220,
        "wires": [
            [
                "74681be6ebf98544"
            ]
        ]
    },
    {
        "id": "741983431dc44a5c",
        "type": "function",
        "z": "27c7285378b4bf0f",
        "name": "Query Today",
        "func": "today = Math.round(Date.now()/1000);\ntomorrow = today + 86400;\n\nmsg.query =\"zip_code=88483&date=\"+today;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 640,
        "wires": [
            [
                "26feb62b4a8968ad"
            ]
        ]
    },
    {
        "id": "26feb62b4a8968ad",
        "type": "http request",
        "z": "27c7285378b4bf0f",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "body",
        "url": "https://calc.donnerwetter.de/cgi-bin/globalrad/get_globalrad.py?{{{query}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Content-Type",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 450,
        "y": 640,
        "wires": [
            [
                "15c5e811ac5c89f5"
            ]
        ]
    },
    {
        "id": "15c5e811ac5c89f5",
        "type": "function",
        "z": "27c7285378b4bf0f",
        "name": "Parse Req",
        "func": "// 65 = Solarfläche\n// 0.15 = Workingsgrad\n//flow.set(\"pv_today\",parseFloat(msg.payload[1].split('kWh/qm')[0].replace(',', '.'))*65\n\n// capa capacity of battery\n//flow.set('energy_day1',6);\n\npv_today=(msg.payload.rad_sum*65*0.12);\nflow.set('pv_today',pv_today);\n\nvar jetzt = new Date(), tag = jetzt.getDay();\n\nladung = pv_today - flow.get('energy_day'+tag) - (flow.get('soc')/100*7.104);\nrestladung = (100-flow.get('soc')/100)*7.104;\n\n\nladungproh = (ladung) / flow.get('daylength');\nmsg.payload = Math.round(ladungproh*1000/50);\nflow.set('chargelimit',msg.payload);\nmsg.ladungproh = ladungproh;\nmsg.ladung = ladung;\n/*\ncapa = 7.104;\n\n// minimum system soc\nsyssoc = 10;\n\n\n// set energy consumption during solar production\nflow.set('energy_tillnow',(flow.get('energy_now')-flow.get('energy_sunrise')));\n\nladung = (flow.get('pv_today')-flow.get('energy_tillnow'));\n\nminsoc = (1-((ladung*0.90) / capa))*100;\n\nif (minsoc<=syssoc) {\n  //  msg.payload = syssoc;\n} else {\n  //  msg.payload = Math.round(minsoc/5)*5;\n}\nflow.set('minsoc',msg.payload);\nflow.set('ladung',ladung);\n*/\n \n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 640,
        "wires": [
            [
                "e8a4a24b8b95b87d"
            ]
        ]
    },
    {
        "id": "7fa479faf8aafaac",
        "type": "inject",
        "z": "27c7285378b4bf0f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 640,
        "wires": [
            [
                "741983431dc44a5c"
            ]
        ]
    },
    {
        "id": "6927d857f0e14c41",
        "type": "inject",
        "z": "27c7285378b4bf0f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 480,
        "wires": [
            [
                "ee40bf622c068eab"
            ]
        ]
    },
    {
        "id": "92d239e20d09e598",
        "type": "http request",
        "z": "27c7285378b4bf0f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.proplanta.de/Wetter/Burgrieden-Wetter-Heute.html",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 150,
        "y": 560,
        "wires": [
            [
                "30d0945a5533e014"
            ]
        ]
    },
    {
        "id": "30d0945a5533e014",
        "type": "html",
        "z": "27c7285378b4bf0f",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "#SD td span",
        "ret": "text",
        "as": "single",
        "x": 310,
        "y": 560,
        "wires": [
            [
                "7291e46d3f69b8f7"
            ]
        ]
    },
    {
        "id": "7291e46d3f69b8f7",
        "type": "function",
        "z": "27c7285378b4bf0f",
        "name": "SD Today",
        "func": "// 65 = Solarfläche\n// 0.15 = Workingsgrad\nmsg.sonnenscheindauer = msg.payload[1].split(' %')[0]/100;\nmsg.restladung = (100-flow.get('soc'))/100*7.104;\nmsg.ladungproh=msg.restladung/flow.get('daylength')/msg.sonnenscheindauer;\nmsg.payload = Math.round(msg.ladungproh*1000/50);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "32403544033f64af",
        "type": "debug",
        "z": "27c7285378b4bf0f",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 600,
        "wires": []
    },
    {
        "id": "d074ed9d05b97844",
        "type": "inject",
        "z": "27c7285378b4bf0f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 40,
        "wires": [
            [
                "db8c8875ae01ee0e"
            ]
        ]
    },
    {
        "id": "ee40bf622c068eab",
        "type": "http request",
        "z": "27c7285378b4bf0f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.wetteronline.de/wetter/burgrieden",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "User-Agent",
                "keyValue": "",
                "valueType": "Mozilla/5.0",
                "valueValue": ""
            }
        ],
        "x": 290,
        "y": 480,
        "wires": [
            [
                "da5f9ab8de8114fa"
            ]
        ]
    },
    {
        "id": "da5f9ab8de8114fa",
        "type": "html",
        "z": "27c7285378b4bf0f",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "tr#sun_teaser td span",
        "ret": "html",
        "as": "single",
        "x": 480,
        "y": 480,
        "wires": [
            [
                "24bbf3464f393097"
            ]
        ]
    },
    {
        "id": "24bbf3464f393097",
        "type": "function",
        "z": "27c7285378b4bf0f",
        "name": "function 14",
        "func": "\n\nmsg.sonnenscheindauer = msg.payload[0].split(' Std.')[0];\nmsg.restladung = (100-flow.get('soc'))/100*7.104;\nmsg.ladungproh=(msg.restladung*1.1)/msg.sonnenscheindauer;\nmsg.curr =Math.round(msg.ladungproh*1000/49);\nif (msg.curr<=30) {\n    msg.payload=30;\n    \n} else {\n    msg.payload=msg.curr;\n}\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 480,
        "wires": [
            [
                "52a591d15aff9307",
                "32403544033f64af"
            ]
        ]
    }
]
